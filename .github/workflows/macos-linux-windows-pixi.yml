name: CI - MacOS/Linux/Windows via Pixi

on:
  push:
    paths-ignore:
      - 'doc/**'
      - 'scripts/**'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '*.md'
      - 'CITATION.cff'
      - 'CITATIONS.bib'
      - 'CHANGELOG.md'
  pull_request:
    paths-ignore:
      - 'doc/'
      - 'scripts/'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '*.md'
      - 'CITATION.cff'
      - 'CITATIONS.bib'
      - 'CHANGELOG.md'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  proxsuite-nlp-pixi:
    name: ${{ matrix.os }} - Env ${{ matrix.environment }} ${{ matrix.build_type }} ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_BASEDIR: "${GITHUB_WORKSPACE}"
      CCACHE_DIR: "${GITHUB_WORKSPACE}/.ccache"
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13]
        environment: [all, all-py39]
        build_type: [Release, Debug]

        include:
          - os: windows-latest
            environment: all
            build_type: Release
          - os: windows-latest
            environment: all-clang-cl
            build_type: Release

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v4
      with:
        path: .ccache
        key: ccache-macos-linux-pixi-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.python-version }}-${{ github.sha }}
        restore-keys: ccache-macos-linux-pixi-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.python-version }}-

    - uses: prefix-dev/setup-pixi@v0.8.1
      with:
        cache: true
        environments: ${{ matrix.environment }}

    - name: Build proxsuite-nlp
      shell: bash -el {0}
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 4
        PROXSUITE_NLP_BUILD_TYPE: ${{ matrix.build_type }}
        PROXSUITE_NLP_BENCHMARK: ON
      run: |
        pixi run -e ${{ matrix.environment }} test

  check:
    if: always()
    name: check-macos-linux-windows-pixi

    needs:
    - proxsuite-nlp-pixi

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
